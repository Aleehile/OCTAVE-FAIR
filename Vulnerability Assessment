class Vulnerability:
    def __init__(self, name, threat_capability, control_strength):
        self.name = name
        self.threat_capability = threat_capability
        self.control_strength = control_strength

# Define vulnerabilities (name, threat_capability, control_strength)
vulnerabilities = [
    Vulnerability("Weak Authentication", 0.8, 0.3),
    Vulnerability("Unpatched Software", 0.7, 0.4),
    Vulnerability("Insecure API", 0.6, 0.5),
    # Add more vulnerabilities
]

def calculate_risk(vulnerability):
    threat_capability = vulnerability.threat_capability
    control_strength = vulnerability.control_strength

    risk = threat_capability * (1 - control_strength)
    vulnerability.risk = risk

def assess_vulnerabilities(vulnerabilities):
    for vulnerability in vulnerabilities:
        calculate_risk(vulnerability)
        print(f"Vulnerability: {vulnerability.name}")
        print(f" - Threat Capability: {vulnerability.threat_capability:.2f}")
        print(f" - Control Strength: {vulnerability.control_strength:.2f}")
        print(f" - Risk: {vulnerability.risk:.2f}\n")

if __name__ == '__main__':
    assess_vulnerabilities(vulnerabilities)
